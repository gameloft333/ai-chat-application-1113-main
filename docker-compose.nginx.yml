# version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Conditionally mount SSL certificates
      - type: bind
        source: /etc/letsencrypt/live/love.saga4v.com/fullchain.pem
        target: /etc/nginx/ssl/love/fullchain.pem
        read_only: true
        # Optional: add condition to skip if file doesn't exist
        # bind:
        #   create_host_path: true
      - type: bind
        source: /etc/letsencrypt/live/love.saga4v.com/privkey.pem
        target: /etc/nginx/ssl/love/privkey.pem
        read_only: true
      # Similar for play.saga4v.com
    networks:
      - app_network
    restart: on-failure
    depends_on:
      - frontend  # Optional: ensures frontend starts first
  frontend:
    container_name: ai-chat-application-1113-main-frontend-1
    build: 
      context: .
      dockerfile: Dockerfile
    networks:
      - app_network
      
    # Add health check
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app_network: # When both Docker Compose files use driver: bridge for the same network name (app_network), Docker Compose will create a shared bridge network that allows containers from both compose files to communicate.
    # external: true  # 使用外部网络
    driver: bridge