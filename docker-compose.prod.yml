# version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ai-chat-application-1113-main-frontend-1
    restart: unless-stopped
    env_file: 
      - .env.production
    ports:
      - "4173:4173"
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 120s
    networks:
      - saga4v_network # When both Docker Compose files use driver: bridge for the same network name (saga4v_network), Docker Compose will create a shared bridge network that allows containers from both compose files to communicate.
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  payment:
    build: 
      context: ./payment-server
      dockerfile: Dockerfile
    container_name: ai-chat-application-1113-main-payment-server-1
    restart: unless-stopped
    env_file: 
      - .env.production
    environment:
      - NODE_ENV=production
      - PORT=4242
    ports:
      - "4242:4242"
    volumes:
      - ./payment-server/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4242/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - saga4v_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Optional: Add monitoring or logging service
  # Remove or comment out if not needed
  # monitoring:
  #   image: grafana/grafana
  #   container_name: companion-monitoring
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - saga4v_network

networks:
  saga4v_network: 
    external: true  # Use the same external network as Nginx. Important: tells Docker this network is created externally.
    # driver: bridge