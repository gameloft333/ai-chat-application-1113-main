# version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      frontend:
        condition: service_healthy
      payment:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "4173:4173"
    env_file:
      - .env.production
    environment:
      # Ensure default values for all environment variables
      - VITE_MOONSHOT_API_KEY=${VITE_MOONSHOT_API_KEY:-}
      - VITE_GEMINI_API_KEY=${VITE_GEMINI_API_KEY:-}
      - NODE_ENV=production
      - VITE_API_KEY=${VITE_API_KEY:-}
      - VITE_API_URL=http://payment:4242
      # Firebase Config with default empty strings
      - VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY:-}
      - VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN:-}
      - VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID:-}
      - VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET:-}
      - VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID:-}
      - VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID:-}
      - VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID:-}
      # Stripe Config with default empty strings
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY:-}
      - VITE_STRIPE_MODE=${VITE_STRIPE_MODE:-}
      # Marquee Config
      - VITE_MARQUEE_ENABLED=true
      - VITE_MARQUEE_ANIMATION_DURATION=20000
      - HOST=0.0.0.0
    command: >
      sh -c "
        export PATH=/app/node_modules/.bin:$PATH &&
        echo ' Starting Frontend Deployment...' &&
        npm run clean &&
        echo ' Building Production Assets...' &&
        npm run build:prod &&
        echo ' Listing dist contents...' &&
        ls -la dist &&
        echo ' Starting Preview Server...' &&
        npm run preview:prod
      "
    healthcheck:
      test: ["CMD-SHELL", "/healthcheck.sh"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 120s
    restart: unless-stopped

  payment:
    build: 
      context: ./payment-server
      dockerfile: Dockerfile
    ports:
      - "4242:4242"
    env_file:
      - .env.production
    environment:
      - PORT=4242
      - NODE_ENV=production
      # Stripe Config with default empty strings
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY:-}
      - VITE_STRIPE_MODE=${VITE_STRIPE_MODE:-}
    command: >
      sh -c "
        echo ' Starting Payment Service...' &&
        sleep 15 &&
        echo ' Checking Environment Variables...' &&
        node -e 'console.log(`环境变量检查:\nSTRIPE_SECRET_KEY=${process.env.STRIPE_SECRET_KEY || "未设置"}\nVITE_STRIPE_MODE=${process.env.VITE_STRIPE_MODE || "未设置"}`)' &&
        echo ' Installing Dependencies...' &&
        npm install &&
        echo ' Starting Payment Server...' &&
        npm start
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4242/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    depends_on:
      frontend:
        condition: service_healthy
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  payment_data:
    driver: local