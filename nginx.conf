events {
    worker_connections 1024;
}

http {
    # Use Docker's internal DNS
    resolver 127.0.0.11 ipv6=off;
    resolver_timeout 10s;

    # Upstream server configuration
    upstream frontend {
        server ai-chat-application-1113-main-frontend-1:4173;
    }

    upstream payment {
        server ai-chat-application-1113-main-payment-1:4242;
    }

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name love.saga4v.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name love.saga4v.com;
    
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    
        # Detailed error logging
        error_log /var/log/nginx/error.log debug;
    
        # Frontend routing
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Websocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts and error handling
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Payment service routing
        location /payment {
            proxy_pass http://payment;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
